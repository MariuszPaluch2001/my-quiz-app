-- Generated by Oracle SQL Developer Data Modeler 21.2.0.165.1515
--   at:        2022-08-17 12:38:39 CEST
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE card (
    card_id     NUMBER(6) NOT NULL,
    question    VARCHAR2(200 CHAR) NOT NULL,
    answer      VARCHAR2(500 CHAR) NOT NULL,
    category_id NUMBER(5) NOT NULL
);

CREATE INDEX category__idx ON
    card (
        category_id
    ASC );

ALTER TABLE card ADD CONSTRAINT card_pk PRIMARY KEY ( card_id );

CREATE TABLE card_answer (
    timestamp        DATE NOT NULL,
    card_id          NUMBER(6) NOT NULL,
    return_time      NUMBER(4) NOT NULL,
    user_id          NUMBER(4) NOT NULL,
    user_category_id DATE NOT NULL,
    is_correct       CHAR(1) NOT NULL
);

CREATE INDEX card_answer__idx ON
    card_answer (
        card_id
    ASC );

ALTER TABLE card_answer
    ADD CONSTRAINT card_answer_pk PRIMARY KEY ( return_time,
                                                user_id,
                                                user_category_id,
                                                card_id,
                                                timestamp );

CREATE TABLE category (
    category_id       NUMBER(5) NOT NULL,
    name              VARCHAR2(50) NOT NULL,
    creation_date     DATE NOT NULL,
    creator_id        NUMBER(4) NOT NULL,
    upper_category_id NUMBER(5)
);

CREATE INDEX upper_category__idx ON
    category (
        upper_category_id
    ASC );

CREATE INDEX user__idx ON
    category (
        creator_id
    ASC );

ALTER TABLE category ADD CONSTRAINT category_pk PRIMARY KEY ( category_id );

CREATE TABLE multimedia_attach (
    attach_id  NUMBER(5) NOT NULL,
    attachment BLOB NOT NULL,
    card_id    NUMBER(6) NOT NULL
);

CREATE INDEX card__idx ON
    multimedia_attach (
        card_id
    ASC );

ALTER TABLE multimedia_attach ADD CONSTRAINT mult_attach_pk PRIMARY KEY ( attach_id );

CREATE TABLE "User" (
    user_id       NUMBER(4) NOT NULL,
    login         VARCHAR2(30) NOT NULL,
    password_hash VARCHAR2(300) NOT NULL,
    creation_date DATE NOT NULL
);

ALTER TABLE "User" ADD CONSTRAINT user_pk PRIMARY KEY ( user_id );

ALTER TABLE "User" ADD CONSTRAINT login__un UNIQUE ( login );

CREATE TABLE user_attempt (
    return_time      DATE NOT NULL,
    user_id          NUMBER(4) NOT NULL,
    user_category_id NUMBER(5) NOT NULL
);

ALTER TABLE user_attempt
    ADD CONSTRAINT user_attempt_pk PRIMARY KEY ( user_id,
                                                 user_category_id,
                                                 return_time );

CREATE TABLE user_category (
    category_id NUMBER(5) NOT NULL,
    user_id     NUMBER(4) NOT NULL
);

CREATE INDEX user_category__id ON
    user_category (
        category_id
    ASC );

ALTER TABLE user_category ADD CONSTRAINT user_categories_pk PRIMARY KEY ( user_id,
                                                                          category_id );

ALTER TABLE card_answer
    ADD CONSTRAINT card_answer_card_fk FOREIGN KEY ( card_id )
        REFERENCES card ( card_id );

ALTER TABLE card_answer
    ADD CONSTRAINT card_answer_user_attempt_fk FOREIGN KEY ( return_time,
                                                             user_id,
                                                             user_category_id )
        REFERENCES user_attempt ( user_id,
                                  user_category_id,
                                  return_time );

ALTER TABLE card
    ADD CONSTRAINT card_category_fk FOREIGN KEY ( category_id )
        REFERENCES category ( category_id );

ALTER TABLE category
    ADD CONSTRAINT category_user_fk FOREIGN KEY ( creator_id )
        REFERENCES "User" ( user_id );

ALTER TABLE multimedia_attach
    ADD CONSTRAINT mult_attach_card_fk FOREIGN KEY ( card_id )
        REFERENCES card ( card_id );

ALTER TABLE category
    ADD CONSTRAINT upper_category_fk FOREIGN KEY ( upper_category_id )
        REFERENCES category ( category_id );

ALTER TABLE user_attempt
    ADD CONSTRAINT user_attempt_user_category_fk FOREIGN KEY ( user_id,
                                                               user_category_id )
        REFERENCES user_category ( user_id,
                                   category_id );

ALTER TABLE user_category
    ADD CONSTRAINT user_category_category_fk FOREIGN KEY ( category_id )
        REFERENCES category ( category_id );

ALTER TABLE user_category
    ADD CONSTRAINT user_category_user_fk FOREIGN KEY ( user_id )
        REFERENCES "User" ( user_id );

CREATE OR REPLACE TRIGGER fkntm_card_answer BEFORE
    UPDATE OF return_time, user_id, user_category_id, card_id ON card_answer
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table Card_answer is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_category BEFORE
    UPDATE OF creator_id ON category
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table Category is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_user_attempt BEFORE
    UPDATE OF user_id, user_category_id ON user_attempt
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table User_attempt is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_user_category BEFORE
    UPDATE OF category_id, user_id ON user_category
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table User_category is violated');
END;
/

CREATE SEQUENCE card_sequence START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER card_trigger BEFORE
    INSERT ON card
    FOR EACH ROW
    WHEN ( new.card_id IS NULL )
BEGIN
    :new.card_id := card_sequence.nextval;
END;
/

CREATE SEQUENCE category_sequence START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER category_trigger BEFORE
    INSERT ON category
    FOR EACH ROW
    WHEN ( new.category_id IS NULL )
BEGIN
    :new.category_id := category_sequence.nextval;
END;
/

CREATE SEQUENCE attach_sequence START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER attach_trigger BEFORE
    INSERT ON multimedia_attach
    FOR EACH ROW
    WHEN ( new.attach_id IS NULL )
BEGIN
    :new.attach_id := attach_sequence.nextval;
END;
/

CREATE SEQUENCE user_sequence START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER user_trigger BEFORE
    INSERT ON "User"
    FOR EACH ROW
    WHEN ( new.user_id IS NULL )
BEGIN
    :new.user_id := user_sequence.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             7
-- CREATE INDEX                             6
-- ALTER TABLE                             17
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           8
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          4
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
